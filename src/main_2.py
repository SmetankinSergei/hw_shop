from classes.item import Item
from classes.warehouse import Warehouse

if __name__ == '__main__':
    item = Item('Телефон', 10000)
    warehouse = Warehouse()
    warehouse.add_new_item(item, 5)
    """Изменил в соответствии со своей архитектурой. Результат тот же, но логически приятнее"""
    # длина наименования товара меньше 10 символов
    item.name = 'Смартфон'
    assert item.name == 'Смартфон'

    # длина наименования товара больше 10 символов
    item.name = 'СуперСмартфон'
    # Exception: Длина наименования товара превышает 10 символов.
    """Почему? В задании же было сказано, если имя больше 10 символов, оставить 10. Сделано"""

    Item.instantiate_from_csv()
    """Ок, но программа не должна стучаться в файлы, базы и прочие места откуда захочет.
    Так что я сделал DataAccessObject, как я обычно делаю, буду за данными ходить туда. 
    Объект его я не создаю. В большой программе сделал бы класс DAO, здесь же просто файл с методами. 
    А в имени слово 'object' - потому что так принято его называть. Более того, доступ к DAO по-хорошему надо бы
    организовать через контроллер, который бы уточнял какой именно DAO просить дать данные (на каждое место - 
    базу данных, память машины, ещё что - свой DAO, о чём тот кусок кода, который хочет данные, знать не должен,
    он просто должен эти данные попросить, контроллер всё перенаправить, DAO выдать желаемое). Тут нам об этом
    не говорят, почему-то, а ведь у многих возникают уже проблемы из-за того, что они стучатся в файлы откуда захотят,
    а это всего-то пара строк кода ещё... Что же будет на большом проекте... 
    Второе: в skypro как раз говорили, что хорошим тоном является задавать путь через os.path.join.
    Так что я путь аттрибутом в метод не передаю, буду работать по выше описанной схеме. Конечно без контроллера..."""
    # создание объектов из данных файла
    goods_amount = 0
    for item in warehouse.all_items:
        goods_amount += warehouse.all_items[item]['amount']
    assert goods_amount == 5  # в файле 5 записей с данными по товарам
    """Не сразу понял, что имеется в виду... Записи с данными по товарам могут быть разными, если товар один?
    Вряд ли... Если количество единиц товаров, то каким образом? Списком по именам или просто 
    всего товаров сколько есть на складе по штукам... В этом месте я бы пошёл с этими вопросами к тим лиду, 
    чтобы выяснить, что имел в виду заказчик. Но пока что просто посчитал количество, тем более товар там один"""

    item1 = Item.all[0]
    # assert item1.name == 'Смартфон'
    """Этот assert упадёт, имя изменено выше на 'СуперСмартфон' - по итогу 'СуперСмарт'"""

    assert item1.name == 'СуперСмарт'
    assert Item.string_to_number('5') == 5
    assert Item.string_to_number('5.0') == 5
    assert Item.string_to_number('5.5') == 5
